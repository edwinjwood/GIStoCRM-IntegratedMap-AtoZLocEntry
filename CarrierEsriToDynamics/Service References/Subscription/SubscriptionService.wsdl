<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy" xmlns:wsa10="http://www.w3.org/2005/08/addressing" xmlns:tns="http://hickorytech.com/suitesolution/client/service" xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex" xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy" xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata" xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" name="SubscriptionService" targetNamespace="http://hickorytech.com/suitesolution/client/service" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsp:Policy wsu:Id="BasicHttpBinding_ISubscriptionService_policy">
    <wsp:ExactlyOne>
      <wsp:All>
        <sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken RequireClientCertificate="false" />
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256 />
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Lax />
              </wsp:Policy>
            </sp:Layout>
            <sp:IncludeTimestamp />
          </wsp:Policy>
        </sp:TransportBinding>
        <sp:SignedSupportingTokens xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:UsernameToken sp:IncludeToken="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient">
              <wsp:Policy>
                <sp:WssUsernameToken10 />
              </wsp:Policy>
            </sp:UsernameToken>
          </wsp:Policy>
        </sp:SignedSupportingTokens>
        <sp:Wss10 xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:MustSupportRefKeyIdentifier />
            <sp:MustSupportRefIssuerSerial />
          </wsp:Policy>
        </sp:Wss10>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsp:Policy wsu:Id="WebHttpBinding_ISubscriptionServiceRest_policy">
    <wsp:ExactlyOne>
      <wsp:All>
        <http:BasicAuthentication xmlns:http="http://schemas.microsoft.com/ws/06/2004/policy/http" />
        <sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">
          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken RequireClientCertificate="false" />
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256 />
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict />
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:types>
    <xsd:schema elementFormDefault="qualified" targetNamespace="http://hickorytech.com/suitesolution/client/service">
      <xsd:element name="GetSubscriptionAndBillingPointForPhoneNumber">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="phoneNumber" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="0" name="userID" type="xsd:int" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionAndBillingPointForPhoneNumberResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionAndBillingPointForPhoneNumberResult" nillable="true" type="tns:GetSubscriptionStatusData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="GetSubscriptionStatusData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing the result of the SubscriptionService.GetSubscriptionForPhoneNumber method.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:OperationStatusData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="BillingPoint" nillable="true" type="tns:BillingPointProfileData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Object representing billing point profile data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Subscription" nillable="true" type="tns:SubscriptionData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Object representing subscription data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="GetSubscriptionStatusData" nillable="true" type="tns:GetSubscriptionStatusData" />
      <xsd:complexType name="OperationStatusData">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Messages" nillable="true" type="tns:ArrayOfOperationMessageData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Array of error messages.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StatusCode" type="tns:OperationStatusCode">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The status of the operation.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="OperationStatusData" nillable="true" type="tns:OperationStatusData" />
      <xsd:complexType name="ArrayOfOperationMessageData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="OperationMessageData" nillable="true" type="tns:OperationMessageData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfOperationMessageData" nillable="true" type="tns:ArrayOfOperationMessageData" />
      <xsd:complexType name="OperationMessageData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing an error message returned from a service operation.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Code" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The error code for the error message.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The message for the error.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsWarning" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if the message is an error or warning.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="OperationMessageData" nillable="true" type="tns:OperationMessageData" />
      <xsd:simpleType name="OperationStatusCode">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 The status code for the operation.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Success">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 The operation was successful.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ValidationFailure">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 Validation errors occurred while processing the operation.  Validation error codes and 
 messages will vary based on the operation being performed.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ExecutionError">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">3</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 An exception occurred while processing the operation.  Please review the operation API 
 documentation to determine how to handle execution errors.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="OperationStatusCode" nillable="true" type="tns:OperationStatusCode" />
      <xsd:complexType name="BillingPointProfileData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing billing point profile data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="AdditionalUser" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the user that is authorized to perform changes to the billing point data.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AdditionalUserPassword" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The password required to perform changes to the billing point for the additional authorized user.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AdditionalUserPasswordHint" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The question or hint to suggest the password for the additional authorized user.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AuthorizedPassword" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The password required to perform changes to the billing point.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AuthorizedPasswordHint" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The question or hint to suggest the authorization password.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Contact2" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 User-defined contact information (1 of 2 fields).
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Contact3" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 User-defined contact information (2 of 2 fields).
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DateOfBirth" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Birth date for the profile.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DriversLicenseNumber" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Drivers License Number for the profile.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DriversLicenseState" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 State where the Drivers License was issued.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="EmailAddress" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Email address for the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Employer" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the profile's employer.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FaxNumber" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Fax number for the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="HomePhone" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Home phone number for the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MailingAddress" nillable="true" type="tns:MailingAddressData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Address for the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Name" nillable="true" type="tns:NameData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Name of the person or business that is the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Occupation" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The occupation of the profile.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SSN" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Social Security Number for the profile.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="WorkPhone" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Work phone number for the contact.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="BillingPointProfileData" nillable="true" type="tns:BillingPointProfileData" />
      <xsd:complexType name="MailingAddressData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a mailing address
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AddressData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Attn" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Indicates the Street property contains the an attention value such as ATTN: John Smith.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Country" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Optional address country.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Name" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Name of recipient.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Street2" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Optional additional address information, if Attn = True this is the required value for the first line of the address.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Street3" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Optional additional address information.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TaxLocation" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Optional tax location
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="MailingAddressData" nillable="true" type="tns:MailingAddressData" />
      <xsd:complexType name="AddressData">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="City" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The city for delivery.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="County" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The county for delivery.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="GeoCode" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The geo code for the address.  Only required for select operations.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="State" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The state for delivery.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Street" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The first address line.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ZipCode" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The zip or postal code.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AddressData" nillable="true" type="tns:AddressData" />
      <xsd:complexType name="NameData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a customer or company name.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="BusinessName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The business name value for the data object.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FirstName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The first name value for the data object.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LastName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The last name value for the data object.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="NameData" nillable="true" type="tns:NameData" />
      <xsd:complexType name="SubscriptionData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing subscription data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Address" nillable="true" type="tns:StreetAddressData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's street address
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AlternateID" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's alternate ID value that is only populated when the phone number is an empty string.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="BillingPointID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscriber's parent billing point ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CentralOffice" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The central office for the subscriber.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ClassOfService" nillable="true" type="tns:ClassOfServiceData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CommissionAgent" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's commission agent.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Directory" nillable="true" type="tns:SubscriptionDirectoryData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Directory data for the subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Name" nillable="true" type="tns:NameData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's business, first, or last name.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ParentSubID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The parent subscription id
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PhoneNumber" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription's phone number value that is only populated when the alternate ID is an empty string.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ProgrammingHost" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The programming host for the subscriber.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceGroupID" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The currently service group id for the subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedPlan" nillable="true" type="tns:SubscribedPlanData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The currently subscribed plan for the subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscriptionID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique identifier for the subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionData" nillable="true" type="tns:SubscriptionData" />
      <xsd:complexType name="StreetAddressData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a street address.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:AddressData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="GeoBlock" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The geographic block for the address.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="HouseNumber" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The house or building number.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="HouseSuffix" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The ending suffix on the house or building number.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Location" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The location of the street.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PostDirection" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The ending direction of the street.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PreDirection" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The address beginning direction of the street name.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StreetSuffix" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The ending name of the street.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TaxLocation" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The tax location ID for the address.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="StreetAddressData" nillable="true" type="tns:StreetAddressData" />
      <xsd:complexType name="ClassOfServiceData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing class of service data.  Only the AccountType, FacilityType, and ServiceType properties are required to be populated
 when performing data updates or generating service orders.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="AccountType" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The class of service's account type ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="AccountTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the class of service's account type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ClassOfServiceID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The class of service's unique ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CustomerRequestDateOption" type="tns:CustomerRequestDateType">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if customer request date is required
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DefaultContractTypeID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 If contracts are enabled for the class of service, the default contract type ID for a new contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="EnableContracts" type="tns:ContractAvailabilityTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates whether contract selection should be enabled for this class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="EnableSubscriptionGroup" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Enable Subscription Group
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FacilityType" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The class of service's facility type ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FacilityTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the class of service's facility type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="HardwareType" type="tns:WirelessHardwareTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of wireless hardware being represented.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsBillingPointAddressInheritanceAllowed" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if billing point address inheritance is allowed for this class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsBillingPointNameInheritanceAllowed" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if billing point name inheritance is allowed for this class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsCentralOfficeRequired" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if a Central Office is required for this COS
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsCircuitRequired" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if a Circuit Location Info is required for this COS
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsCountyRequired" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the county is required for this class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsDirectoryEnabled" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if directory information is enabled for this class of service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlantClassOfService" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Plant Class of Service value
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlantFacilityType" type="tns:PlantFacilityTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Plant Facility type required for the class of service
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ProductCategory" type="tns:ProductCategoryTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The category of product being represented (wireline or wireless).  This property is required
 to be populated when getting available data.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceHeadingDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Service heading description
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceTotalDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Service total description
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceType" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The class of service's service type ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the class of service's service type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ClassOfServiceData" nillable="true" type="tns:ClassOfServiceData" />
      <xsd:simpleType name="CustomerRequestDateType">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines if customer request date is required
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotAvailable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Request date not available
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Optional">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Request date not optional
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Mandatory">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Request date not required
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="CustomerRequestDateType" nillable="true" type="tns:CustomerRequestDateType" />
      <xsd:simpleType name="ContractAvailabilityTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates if contract selection is available or required for a plan.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotAvailable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Selecting a contract is not permitted for the current procedure.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Available">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Selecting a contract is permitted for the current procedure.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Required">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Selecting a contract is required for the current procedure.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ContractAvailabilityTypeData" nillable="true" type="tns:ContractAvailabilityTypeData" />
      <xsd:simpleType name="WirelessHardwareTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates the type of wireless device being represented.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotApplicable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 No wireless serial number (for wireline)
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ESN_MEID">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 ESN/MEID device.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="GSM">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 GSM device.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="WirelessHardwareTypeData" nillable="true" type="tns:WirelessHardwareTypeData" />
      <xsd:simpleType name="PlantFacilityTypeData">
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Copper">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xsd:appinfo>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Fiber">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xsd:appinfo>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="PlantFacilityTypeData" nillable="true" type="tns:PlantFacilityTypeData" />
      <xsd:simpleType name="ProductCategoryTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates the type of product being represented.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Wireline">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">1</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 A wireline product.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Wireless">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">2</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 A wireless product
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ProductCategoryTypeData" nillable="true" type="tns:ProductCategoryTypeData" />
      <xsd:complexType name="SubscriptionDirectoryData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object containing subscription directory type and caller ID name data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="CallerIDName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The caller ID value that is displayed for outgoing phone calls.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DirectoryTypeID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The ID for the selected directory type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionDirectoryData" nillable="true" type="tns:SubscriptionDirectoryData" />
      <xsd:complexType name="SubscribedPlanData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a subscribed plan for a subscription.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:PlanData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Features" nillable="true" type="tns:ArrayOfEditableSubscribedFeatureData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The editable features for the subscribed plan.  This property is optionally loaded
 based on the method used to fetch the subscribed plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StartDate" type="xsd:dateTime">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The date the subscribed plan was started.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="SubscribedPlanID" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The unique ID for the subscribed plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="SubscribedPlanData" nillable="true" type="tns:SubscribedPlanData" />
      <xsd:complexType name="PlanData">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="BackBillCredit" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicator of whether or not the plan has a back bill credit.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description of the plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID for the plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanStartDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The start date of the plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanStopDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The stop date of the plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Prorate" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicator of whether or not the plan is prorated.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="PlanData" nillable="true" type="tns:PlanData" />
      <xsd:complexType name="ArrayOfEditableSubscribedFeatureData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EditableSubscribedFeatureData" nillable="true" type="tns:EditableSubscribedFeatureData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfEditableSubscribedFeatureData" nillable="true" type="tns:ArrayOfEditableSubscribedFeatureData" />
      <xsd:complexType name="EditableSubscribedFeatureData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing an editable subscribed feature.  
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfEditableSubscribedFeatureData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of editable subscribed features in the feature package or feature group.  The child 
 features can either be a feature include or feature group if the parent feature is a feature 
 package or selected feature options if a feature group.  All child features must have a start 
 and stop date within the range of the parent feature's start and stop date.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsBillingPercentageEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.BillingPrecentage property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsChargeAmountEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.ChargeAmount property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsNegativeQuantityAllowed" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates a negative amount can be entered for the SubscribedFeatureData.Quantity property.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsPartialInEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.IsPartialIn property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsPartialOutEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.IsPartialOut property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsQuantityEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.Quantity property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsResubscribeAllowed" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if a feature can be re-subscribed to within a feature package.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStartDateEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.StartDate property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStopDateEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.StopDate property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsSuppressDetailEditable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.IsDetailSuppressed property can be changed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsUnique" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates of more than one feature with the same PlantFeatureID can be activate
 at any given date.  If IsUnique equals True then multiple instances of the same feature
 can be active on the same date, but if IsUnique equals False then only one instance of 
 the feature can be active at any given date.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MonthsToBillType" type="tns:ChargeMonthsToBillEditTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.MonthsToBill property can be edited, is a monthly
 recurring charge, or is annual recurring charge.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="NumberOfBillCycles" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The number of bill cycles value if available for the charge.  This value will only
 be populated if the ChargeStopDateType.NumberOfBillCycles value is present in the
 StopDateOptions array and can be used to display on the charge edit form.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="QuantityDecimalType" type="tns:ChargeQuantityDecimalTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the SubscribedFeatureData.Quantity property can have a decimal value,
 quarter decimal values are supported (0.00, 0.25, 0.50, 0.75), or that any two 
 decimal digits (0.25, 0.56 or 0.90 for example) can be entered for the charge.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StartDateOptions" nillable="true" type="tns:ArrayOfChargeStartDateTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of available start date options that can be selected when submitting 
 a charge change service order.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StopDateOptions" nillable="true" type="tns:ArrayOfChargeStopDateTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of available stop date options that can be selected when submitting 
 a charge change service order.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedFeature" nillable="true" type="tns:SubscribedFeatureData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscribed feature being edited.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="EditableSubscribedFeatureData" nillable="true" type="tns:EditableSubscribedFeatureData" />
      <xsd:simpleType name="ChargeMonthsToBillEditTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 The types of editing allowed to a charge's months to bill property.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotEditable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the charge months to bill property cannot be edited.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="RecurringMonths">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the months to bill property can have multiple months set to the 
 ChargeRecurrentType.Bill option.  The ChargeRecurrentType.ForceBill option 
 is not available for this type of charge.
 &lt;example&gt;
 VB.NET Example
 &lt;code&gt;
 ' bill the charge in every month except February and September
 charge.MonthsToBill(0) = ChargeRecurrentType.Bill ' January
 charge.MonthsToBill(1) = ChargeRecurrentType.DoNotbill ' February
 charge.MonthsToBill(2) = ChargeRecurrentType.Bill ' March
 charge.MonthsToBill(3) = ChargeRecurrentType.Bill ' April
 charge.MonthsToBill(4) = ChargeRecurrentType.Bill ' May
 charge.MonthsToBill(5) = ChargeRecurrentType.Bill ' June
 charge.MonthsToBill(6) = ChargeRecurrentType.Bill ' July
 charge.MonthsToBill(7) = ChargeRecurrentType.Bill ' August
 charge.MonthsToBill(8) = ChargeRecurrentType.DoNotbill ' September
 charge.MonthsToBill(9) = ChargeRecurrentType.Bill ' October
 charge.MonthsToBill(10) = ChargeRecurrentType.Bill ' November
 charge.MonthsToBill(11) = ChargeRecurrentType.Bill ' December&lt;/code&gt;
		&lt;/example&gt;
	&lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AnnualMonth">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the months to bill property can only have one month selected for
 as the ChargeRecurrentType.Bill or ChargeRecurrentType.ForceBill option.
 &lt;example&gt;
 VB.NET Example
 &lt;code&gt;
 ' force bill the charge in July
 charge.MonthsToBill(0) = ChargeRecurrentType.DoNotbill ' January
 charge.MonthsToBill(1) = ChargeRecurrentType.DoNotbill ' February
 charge.MonthsToBill(2) = ChargeRecurrentType.DoNotbill ' March
 charge.MonthsToBill(3) = ChargeRecurrentType.DoNotbill ' April
 charge.MonthsToBill(4) = ChargeRecurrentType.DoNotbill ' May
 charge.MonthsToBill(5) = ChargeRecurrentType.DoNotbill ' June
 charge.MonthsToBill(6) = ChargeRecurrentType.ForceBill ' July
 charge.MonthsToBill(7) = ChargeRecurrentType.DoNotbill ' August
 charge.MonthsToBill(8) = ChargeRecurrentType.DoNotbill ' September
 charge.MonthsToBill(9) = ChargeRecurrentType.DoNotbill ' October
 charge.MonthsToBill(10) = ChargeRecurrentType.DoNotbill ' November
 charge.MonthsToBill(11) = ChargeRecurrentType.DoNotbill ' December&lt;/code&gt;
		&lt;/example&gt;
	&lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ChargeMonthsToBillEditTypeData" nillable="true" type="tns:ChargeMonthsToBillEditTypeData" />
      <xsd:simpleType name="ChargeQuantityDecimalTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines if quantity decimal values can be submitted for the charge.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotAllowed">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Decimal values cannot be entered for the charge.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="QuarterIncrements">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates that quarter decimal values (0.00, 0.25, 0.50, 0.75) are supported 
 for the charge.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AnyTwoDigits">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates that any two decimal digits (0.25, 0.56 or 0.90 for example) can be 
 entered for the charge.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ChargeQuantityDecimalTypeData" nillable="true" type="tns:ChargeQuantityDecimalTypeData" />
      <xsd:complexType name="ArrayOfChargeStartDateTypeData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChargeStartDateTypeData" type="tns:ChargeStartDateTypeData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfChargeStartDateTypeData" nillable="true" type="tns:ArrayOfChargeStartDateTypeData" />
      <xsd:simpleType name="ChargeStartDateTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates the if a date or the usage start option was selected for the charge start date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DateValue">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 A date value was selected for the charge start date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="UsageStart">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The charge start date should automatically be defaulted to the Billing Point's 
 usage start date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ChargeStartDateTypeData" nillable="true" type="tns:ChargeStartDateTypeData" />
      <xsd:complexType name="ArrayOfChargeStopDateTypeData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChargeStopDateTypeData" type="tns:ChargeStopDateTypeData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfChargeStopDateTypeData" nillable="true" type="tns:ArrayOfChargeStopDateTypeData" />
      <xsd:simpleType name="ChargeStopDateTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates the if a date or the number of bill cycles option was selected for the charge stop date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DateValue">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 A date value was selected for the charge stop date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NumberOfBillCycles">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The charge stop date should automatically be defaulted to the charge's start
 date plus the number of bill cycle months.  For example a 3 month credit charge 
 with a start date of 6/12/2012 will automatically have the stop date set to 
 9/12/2012 after the service order processing has completed.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ChargeStopDateTypeData" nillable="true" type="tns:ChargeStopDateTypeData" />
      <xsd:complexType name="SubscribedFeatureData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a subscribed feature.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="BillingPercentage" nillable="true" type="xsd:float">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Used to bill a percentage amount of the subscribed feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ChargeAmount" type="xsd:decimal">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscribed charge dollar amount.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ChargeID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The charge ID for the subscribed feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsDetailSuppressed" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if call detail is displayed or summarized on the invoice
 for usage features.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsMandatory" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the feature is mandatory and cannot be stop-date or removed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsPartialStatus" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the subscribed feature has a status that is a partial charge.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsRecurring" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the feature is recurring.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsServiceOrderPending" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the subscribed feature is part of an active service order and cannot be edited.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsSystemGenerated" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the feature was generated by the SuiteSolution system.
 Generated features cannot be edited.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MaximumWeight" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 If a feature group package type the maximum cumulative weight of all child feature options.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MinimumWeight" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 If a feature group package type the minimum cumulative weight of all child feature options.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MonthsToBill" nillable="true" type="tns:ArrayOfChargeRecurrenceTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array with indexes ranging from 0 (January) to 11 (December) used to indicate which month(s) the 
 features is billed to the customer.  Values of ChargeRecurrentType.Bill and 
 ChargeRecurrentType.DoNotBill can be set to the 0-11 index values if a monthly recurring
 charge (ChargeMonthsToBillEditType.RecurringMonths).  At least one month must be set to 
 ChargeRecurrentType.Bill for monthly recurring features.  Values of ChargeRecurrentType.Bill,
 ChargeRecurrentType.DoNotBill, and ChargeRecurrentType.ForceBill can be set to the 0-11 index 
 values if an annual recurring feature (ChargeMonthsToBillEditType.AnnualMonth).  Only one 
 month can be set to ChargeRecurrentType.Bill or ChargeRecurrentType.ForceBill for annual 
 recurring features.
 &lt;example&gt;
 VB.NET Example
 &lt;code&gt;
 ' bill the monthly recurring feature in every month except February and September
 feature.MonthsToBill(0) = ChargeRecurrentType.Bill ' January
 feature.MonthsToBill(1) = ChargeRecurrentType.DoNotbill ' February
 feature.MonthsToBill(2) = ChargeRecurrentType.Bill ' March
 feature.MonthsToBill(3) = ChargeRecurrentType.Bill ' April
 feature.MonthsToBill(4) = ChargeRecurrentType.Bill ' May
 feature.MonthsToBill(5) = ChargeRecurrentType.Bill ' June
 feature.MonthsToBill(6) = ChargeRecurrentType.Bill ' July
 feature.MonthsToBill(7) = ChargeRecurrentType.Bill ' August
 feature.MonthsToBill(8) = ChargeRecurrentType.DoNotbill ' September
 feature.MonthsToBill(9) = ChargeRecurrentType.Bill ' October
 feature.MonthsToBill(10) = ChargeRecurrentType.Bill ' November
 feature.MonthsToBill(11) = ChargeRecurrentType.Bill ' December
 
 ' force bill the annual recurring feature in July
 feature.MonthsToBill(0) = ChargeRecurrentType.DoNotbill ' January
 feature.MonthsToBill(1) = ChargeRecurrentType.DoNotbill ' February
 feature.MonthsToBill(2) = ChargeRecurrentType.DoNotbill ' March
 feature.MonthsToBill(3) = ChargeRecurrentType.DoNotbill ' April
 feature.MonthsToBill(4) = ChargeRecurrentType.DoNotbill ' May
 feature.MonthsToBill(5) = ChargeRecurrentType.DoNotbill ' June
 feature.MonthsToBill(6) = ChargeRecurrentType.ForceBill ' July
 feature.MonthsToBill(7) = ChargeRecurrentType.DoNotbill ' August
 feature.MonthsToBill(8) = ChargeRecurrentType.DoNotbill ' September
 feature.MonthsToBill(9) = ChargeRecurrentType.DoNotbill ' October
 feature.MonthsToBill(10) = ChargeRecurrentType.DoNotbill ' November
 feature.MonthsToBill(11) = ChargeRecurrentType.DoNotbill ' December&lt;/code&gt;
		&lt;/example&gt;
	&lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Name" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name for the subscribed feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PackageAvailabilityType" type="tns:FeaturePackageAvailabiltyTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Used to determine if a feature is available for selection in a feature package.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PackageType" type="tns:FeaturePackageTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if the feature is not part of a package, a feature package, feature include, feature
 group, or feature option.  If the type is a feature package or feature group then there
 will be child features.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PackageVisibilityType" type="tns:FeaturePackageVisibilityTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Specifies if and when a feature in a package is to be displayed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Parameters" nillable="true" type="tns:ArrayOfProvisionParameterData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of provision parameters if available for the feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PartialIn" type="tns:PartialInValueData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if additional features should be generated based on feature 
 definition and when stop dates are assigned to the feature
 outside of the current billing cycle.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PartialOut" type="tns:PartialOutValueData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if additional features should be generated based on feature 
 definition and when stop dates are assigned to the feature
 outside of the current billing cycle.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanFeatureID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID for the plan feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;D:\Projects\SuiteSolution\SUITESOLUTION\SuiteSolution.Client\Data\Account\SubscribedChargeData.vb
 &lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Quantity" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates the number of times the feature can be billed on the customer's statement.
 Depending on feature configuration the value can be a whole number, Single, or
 negative.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="QuantityChangeDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The date the quantity amount was changed.  This value is required when changing 
 the quantity amount of existing features.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RecurrenceType" type="tns:BillingRecurrenceTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The frequency with which the feature is billed to the customer.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceIDs" nillable="true" type="tns:ArrayOfServiceIDData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of service IDs if available for the feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StartDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The start date the feature is effective from. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StopDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The optional end date the feature is effective through. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedFeatureID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID for the subscribed feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Weight" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 If a feature option the weight for calculating the parent feature group's 
 minimum/maximum weight.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscribedFeatureData" nillable="true" type="tns:SubscribedFeatureData" />
      <xsd:complexType name="ArrayOfChargeRecurrenceTypeData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChargeRecurrenceTypeData" type="tns:ChargeRecurrenceTypeData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfChargeRecurrenceTypeData" nillable="true" type="tns:ArrayOfChargeRecurrenceTypeData" />
      <xsd:simpleType name="ChargeRecurrenceTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines the month(s) the charge is billed to the customer.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DoNotBill">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the charge should not be billed in the related month.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Bill">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the charge should be billed in the related month.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="ForceBill">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates that the charge should be billed in the next billing period.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Skipped">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the charge billing should be skipped for the month.  This is a read-only value that should not be changed when updating charges.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ChargeRecurrenceTypeData" nillable="true" type="tns:ChargeRecurrenceTypeData" />
      <xsd:simpleType name="FeaturePackageAvailabiltyTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates if a feature is available for selection in a feature package.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="DoesNotApply">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 This feature availability does not apply for the current procedure.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Available">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The feature is available.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="NotAvailable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 This feature is not available due to not being compatible or being out of date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FeaturePackageAvailabiltyTypeData" nillable="true" type="tns:FeaturePackageAvailabiltyTypeData" />
      <xsd:simpleType name="FeaturePackageTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates of the subscribed feature is part of a feature package.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotAvailable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The feature is not part of a feature package.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FeaturePackage">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The top-level feature in a package.  Feature Packages are services offered to the subscriber as a 
 bundle of multiple features such as voice mail, call waiting, call forward, and caller ID. 
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FeatureInclude">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Features that are automatically included in a feature package that typically carry a charge.  
 Feature includes are direct children of the top-level feature package and cannot be removed from 
 a feature package.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FeatureGroup">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Features that are automatically included in a feature package used for selecting optional child 
 features based on a weight range.  Feature groups are direct children of the top-level feature 
 package and cannot be removed from a feature package.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FeatureOption">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Features that are optionally selected to be part of a feature group based on weight.  Feature options
 can only be children of a feature group but can be removed/stop-dated from the feature group.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FeaturePackageTypeData" nillable="true" type="tns:FeaturePackageTypeData" />
      <xsd:simpleType name="FeaturePackageVisibilityTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates if a feature package option is to be displayed.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Unknown">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Feature visibility is unknown/not set.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Always">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Feature is always visible.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="DetailOnly">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Feature is visible only when details are displayed.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Never">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Feature is never visible.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="FeaturePackageVisibilityTypeData" nillable="true" type="tns:FeaturePackageVisibilityTypeData" />
      <xsd:complexType name="ArrayOfProvisionParameterData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ProvisionParameterData" nillable="true" type="tns:ProvisionParameterData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfProvisionParameterData" nillable="true" type="tns:ArrayOfProvisionParameterData" />
      <xsd:complexType name="ProvisionParameterData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a provisioning parameter for a feature.  Provisioning parameters
 are either free-form alphanumeric/numeric text or selectable from a list of options.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="DefaultValue" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The default value for a new provision parameter.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="EventProcessorDescription" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the event processor that provisions the parameter.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsActivationParameter" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the parameter is to be edited for an active or stop-dated/removed feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsRequired" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the parameter is required or optional.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MaximumLength" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The maximum length of the parameter value when the type is alphanumeric or numeric.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MinimumLength" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The minimum length of the parameter value when the type is alphanumeric or numeric.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="OptionID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The selected option ID if the parameter type is a fixed-list.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ParameterDescription" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the provision parameter.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ParameterID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique provision parameter ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ParameterType" type="tns:ProvisionParameterTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of provision parameter that should be used to display editable fields.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ProvisionDescription" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the external system ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedFeatureID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The parent feature's subscribed feature ID.  The ID is required for deactivation parameters
 when submitting change plan requests.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedParameterID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique subscribed provision parameter ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Value" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The value for the provision parameter.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ProvisionParameterData" nillable="true" type="tns:ProvisionParameterData" />
      <xsd:simpleType name="ProvisionParameterTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines the type of editing allowed for a provision parameter.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Alphanumeric">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The provision parameter can be an alphanumeric value with a character length between the 
 ProvisionParameter.MinimumLength and the ProvisionParameter.MinimumLength.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Numeric">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The provision parameter value must be a whole number with a character length between the 
 ProvisionParameter.MinimumLength and the ProvisionParameter.MinimumLength.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="FixedList">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The provision parameter values can be selected from a pre-defined list of options.  The
 list of pre-defined options can be retrieved using the
 AccountService.GetProvisionParameterOptions() service method.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ProvisionParameterTypeData" nillable="true" type="tns:ProvisionParameterTypeData" />
      <xsd:simpleType name="PartialInValueData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines when start dates are assigned to charges, credits or features outside of the current billing cycle.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="No">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Do not back bill credit.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Yes">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Credit should be created but the first day of service should not be credited.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="PartialInValueData" nillable="true" type="tns:PartialInValueData" />
      <xsd:simpleType name="PartialOutValueData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines when stop dates are assigned to charges, credits or features outside of the current billing cycle.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="No">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Do not back bill credit.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Yes">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Credit should be created but the first day of service should not be credited.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Full">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the charge/feature is stop dated with a date that is the same as the start date, the charge/feature 
 should be back credited with the credit including that first day of service.  
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="PartialOutValueData" nillable="true" type="tns:PartialOutValueData" />
      <xsd:simpleType name="BillingRecurrenceTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Represents the frequency with which a feature is billed to the customer.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NonRecurring">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the feature is a one-time billing.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="MonthlyRecurring">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the feature is billed by the month (although it may not be billed each and every month).
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="AnnualRecurring">
            <xsd:annotation>
              <xsd:appinfo>
                <EnumerationValue xmlns="http://schemas.microsoft.com/2003/10/Serialization/">12</EnumerationValue>
              </xsd:appinfo>
              <xsd:documentation>	&lt;summary&gt;
 Indicates the feature is billed annually.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="BillingRecurrenceTypeData" nillable="true" type="tns:BillingRecurrenceTypeData" />
      <xsd:complexType name="ArrayOfServiceIDData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceIDData" nillable="true" type="tns:ServiceIDData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfServiceIDData" nillable="true" type="tns:ArrayOfServiceIDData" />
      <xsd:complexType name="ServiceIDData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a subscribed service ID value instance.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ActivationDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The date the service ID value is active.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ActivationDateType" type="tns:ChargeStartDateTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of activation date from the list of
 available options.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="BypassReuseWaitPeriod" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the service ID value can be reused prior to the ending of the designated wait 
 period.  Required when changing or adding a service ID.  
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DeactivationDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The date the service ID value was deactivated.  A NULL value indicates the
 service ID value is stall active.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="HasHardware" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates that the service ID value has related hardware.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="HoldID" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The temporary assigned hold ID when adding or editing the service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IDType" nillable="true" type="tns:ServiceIDTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Contains the service ID type information assigned to the service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IDValue" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Contains the actual service ID string value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RecordID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID assigned to the subscribed service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SecondaryIDValue" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Contains the optional secondary ID string for the service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceOrderID" nillable="true" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The parent service order ID if the service ID value is part of an open order.  This value 
 will be null if there is no pending related service order.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ServiceIDData" nillable="true" type="tns:ServiceIDData" />
      <xsd:complexType name="ServiceIDTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a type of service ID.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique identifier for the service ID type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="InventoryClass" type="tns:ServiceIDInventoryClassData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the service ID type is generic or inventoried.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsAutoAssigned" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates whether defaults should be selected when this service ID type is associated with a feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Name" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The name of the service ID type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Requirement" type="tns:ServiceIDRequirementTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates at what time this service ID type is required to be populated when assigned to a feature.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="UserInterfaceHandlerID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Identifier for the UI interface that will be used by CRM to allow editing values of this service ID type.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ValidationRegularExpression" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Regular expression that enforces the formatting of this ID type (in order to distinguish between ID 
 formatting errors and IDs that are not present in the inventory). If this value is NULL, no such 
 formatting validation should take place.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ServiceIDTypeData" nillable="true" type="tns:ServiceIDTypeData" />
      <xsd:simpleType name="ServiceIDInventoryClassData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines if the service ID type is generic or inventoried.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Generic">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The service IDs do not need to exist in the inventory table, they are a manually keyed, free-form values.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Inventoried">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
  The service IDs must exist in the inventory table in order to be allocated.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ServiceIDInventoryClassData" nillable="true" type="tns:ServiceIDInventoryClassData" />
      <xsd:simpleType name="ServiceIDRequirementTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Service ID Requirement Types.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="RequiredNotEditable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 'R': The ID must be populated immediately in CRM (prior to the order being created), and is read-only thereafter in WFM.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="RequiredEditable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 'M': The ID must be populated immediately in CRM (prior to the order being created), but is allowed to be edited thereafter in WFM (although the value cannot be deleted entirely in WFM).
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Optional">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 'C': The ID does not need to be populated immediately in CRM, and can be populated at any time prior to order closing in WFM. However, the ID is still required to be populated before the order closes.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ServiceIDRequirementTypeData" nillable="true" type="tns:ServiceIDRequirementTypeData" />
      <xsd:element name="AddSubscriptionSubmit">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="subData" nillable="true" type="tns:AddSubscriptionServiceOrderData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="AddSubscriptionServiceOrderData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object containing data required to create an add subscription service order
 for a billing point.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SubmitServiceOrderData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="AllowMultiNam" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Flag which allows hardware with the same serial number to be active on more than on subscription point.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="BypassReuseWaitPeriod" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Flag if reuse wait period should be bypassed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CircuitLocationA" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Starting location code for the circuit
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CircuitLocationZ" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Ending location code for the circuit
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ClassOfService" nillable="true" type="tns:ClassOfServiceData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Class of service for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Contract" nillable="true" type="tns:ContractData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Contract data for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should be set to Nothing/Null if a contract is not specified or is not applicable to the
 class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Directory" nillable="true" type="tns:SubscriptionDirectoryData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Directory data for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Features" nillable="true" type="tns:ArrayOfFeatureChangeData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 List of selected features.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="HardwareModelID" nillable="true" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Model ID of selected hardware
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should be set to Nothing/Null if hardware is not specified or is not applicable to the
 class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="HardwareNotes" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Notes pertaining to the hardware
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ICCID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The mobile device's new ICCID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should only be populated if applicable to the class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 ID/phone number for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="InheritBillingPointAddress" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Determines if the new subscription's should inherit address information from the billing point.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field is only applicable if allowed based on the selected class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="InheritBillingPointName" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Determines if the new subscription's name should inherit name information from the billing point.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field is only applicable if allowed based on the selected class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="IsAlternate" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Flag indicating if the ID property represents an alternate (non-phone) number
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="LifelineExempt" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Lifeline exempt ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Market" nillable="true" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Market for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should be set to Nothing/Null if market is not applicable to the new subscription.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="OpportunityID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Optional opportunity ID related to the subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should be set to Nothing/Null if opportunity ID is not applicable to the subscription.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PlanID" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 ID of the selected plan.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ReasonCode" nillable="true" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Reason code for plan addition.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should be set to Nothing/Null if the reason code is not required.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceAddress" nillable="true" type="tns:StreetAddressData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Address at which the service is provided.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceGroupID" nillable="true" type="xsd:long">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The service group ID.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceName" nillable="true" type="tns:NameData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Customer name to appear for the service.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="TaxExemptions" nillable="true" type="q1:ArrayOfint">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Integer IDs of applicable tax exemptions.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TemporaryHoldID" nillable="true" type="xsd:int">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The id for the temporary hold reservation that is retrieved from GetSuggestedPhoneNumbers.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="WirelessID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The unique Pager, ESN, MEID, or IMEI number for the mobile device.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;Field should only be populated if applicable to the class of service.&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="AddSubscriptionServiceOrderData" nillable="true" type="tns:AddSubscriptionServiceOrderData" />
      <xsd:complexType name="SubmitServiceOrderData">
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ApplyServiceCharges" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if all service charges should be applied if found based on the type of service order
 and service order data.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="BillingPointID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The required billing point ID for the service order.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CustomerRequestDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The optional date the the customer has requested the service to be installed or completed.  Depending on configuration this date 
 value can contain a time portion. 
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DueDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The required due date for the service order. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ExpediteReasonID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The optional reason the IsExpedite property is set to True for the service order.  Available expedite order reasons can be 
 fetched using the OrderService.GetExpediteReasonCodes() method.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ExternalRequestID" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The client's identifier for the activity.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;String identifying the associated activity.&lt;/returns&gt;
	&lt;remarks&gt;This identifier is not modified or used internally by the server - it is only assigned to any
 status messages related to the same activity so the client can identify them.&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="InstallInstructions" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Optional install instructions for the service order.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsExpedited" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the service order should be flagged as expedited.  This is an optional property and set to False by default.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsRecordsOnly" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates if the service order should be created as records-only.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ScheduledStartDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The required date the service order should start processing. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscriptionID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscription ID for the service order. This data is not required for
 billing point level service orders.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="UserID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The required user ID the service order will be created under.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="UserName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The required username the service order will be created under.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubmitServiceOrderData" nillable="true" type="tns:SubmitServiceOrderData" />
      <xsd:complexType name="ContractData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a subscription's contract.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Agent" nillable="true" type="tns:AgentData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The contract's selected agent.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="MonthlyCancelFee" type="xsd:float">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The monthly cancellation fee for the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Notes" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Optional notes about the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StartDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The start date for the contract. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StopDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The optional date the contract ends. This date value should not include any time portion.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Type" nillable="true" type="tns:ContractTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ContractData" nillable="true" type="tns:ContractData" />
      <xsd:complexType name="AgentData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing an agent.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="AgentID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID for the agent.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the agent.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="AgentData" nillable="true" type="tns:AgentData" />
      <xsd:complexType name="ContractTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing a contract type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="CancelFeeFlag" type="tns:ContractCancelFeeFlagData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The cancellation fee flag for the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ContractTerm" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The default number of days the contract is active.  When creating a new contract this value should 
 set the default stop date based on the contract's start date.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ContractTypeID" nillable="true" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The unique ID for the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The description for the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStopDateEnabled" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Determines if the stop date is allowed for the contract.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ContractTypeData" nillable="true" type="tns:ContractTypeData" />
      <xsd:simpleType name="ContractCancelFeeFlagData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Indicates if cancellation fee is available or required for a contract.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="NotAvailable">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Assigning a cancellation fee is not permitted.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Optional">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Assigning a cancellation fee is optional.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Required">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 ASsigning a cancellation fee is required.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="ContractCancelFeeFlagData" nillable="true" type="tns:ContractCancelFeeFlagData" />
      <xsd:complexType name="ArrayOfFeatureChangeData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="FeatureChangeData" nillable="true" type="tns:FeatureChangeData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfFeatureChangeData" nillable="true" type="tns:ArrayOfFeatureChangeData" />
      <xsd:complexType name="FeatureChangeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing an added, removed, or updated feature.  
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Action" type="tns:DataElementAction">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of subscribed feature change.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Children" nillable="true" type="tns:ArrayOfFeatureChangeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 An array of child feature changes in the feature package or feature group.  The child 
 features can either be a feature include or feature group if the parent feature is a feature 
 package or selected feature options if a feature group.  All child features must have a start 
 and stop date within the range of the parent feature's start and stop date.  If a feature 
 changes within a feature package, all feature parents must be passed to the FeatureChangeSubmit() 
 method in the respected hierarchy.  For example, if a feature option has changed the feature 
 option, parent feature group, and feature package must be passed to the FeatureChangeSubmit()
 in the correct hierarchy each marked with the appropriate Add, Remove, or Update action.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StartDateType" type="tns:ChargeStartDateTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of selected charge start date from the list of
 available options.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StopDateType" type="tns:ChargeStopDateTypeData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The type of selected charge stop date from the list of
 available options.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedFeature" nillable="true" type="tns:SubscribedFeatureData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The subscribed feature that was added, removed, or updated.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="FeatureChangeData" nillable="true" type="tns:FeatureChangeData" />
      <xsd:simpleType name="DataElementAction">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 The status of a data change.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Unknown">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The status of the data object is unknown or unchanged.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Add">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The data object is new.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Remove">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The data object is to be removed.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Update">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The data object was updated.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Save">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 The data object is new or updated, application decides action
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="DataElementAction" nillable="true" type="tns:DataElementAction" />
      <xsd:element name="AddSubscriptionSubmitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="AddSubscriptionSubmitResult" nillable="true" type="tns:AddSubscriptionServiceOrderStatusData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="AddSubscriptionServiceOrderStatusData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing the result of attempting to add a subscription.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SubmitServiceOrderStatusData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="AutoAssignedID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 ID/phone number for the new subscription.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceIDReservations" nillable="true" type="tns:ArrayOfServiceIDReservationData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Contains a list of service ID reservation hold IDs if validation failed and the request
 included features with inventoried service ID types.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="AddSubscriptionServiceOrderStatusData" nillable="true" type="tns:AddSubscriptionServiceOrderStatusData" />
      <xsd:complexType name="SubmitServiceOrderStatusData">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:OperationStatusData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="ExternalRequestID" nillable="true" type="xsd:string">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The client's identifier for the activity
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;String identifying the associated activity&lt;/returns&gt;
	&lt;remarks&gt;This identifier is not modified or used internally by the server - it is only assigned to any
 status messages related to the same activity so the client can identify them&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceOrderID" type="xsd:long">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The unique service order ID that is generated if service order creation is successful.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="SubmitServiceOrderStatusData" nillable="true" type="tns:SubmitServiceOrderStatusData" />
      <xsd:complexType name="ArrayOfServiceIDReservationData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceIDReservationData" nillable="true" type="tns:ServiceIDReservationData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfServiceIDReservationData" nillable="true" type="tns:ArrayOfServiceIDReservationData" />
      <xsd:complexType name="ServiceIDReservationData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object containing reservation information for inventoried service IDs.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="HoldID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 The temporary assigned hold ID assigned to the service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IDValue" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Contains the actual service ID string value that has been reserved.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="TypeID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Contains the service ID type for the service ID value.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ServiceIDReservationData" nillable="true" type="tns:ServiceIDReservationData" />
      <xsd:element name="ConvertMailingAddressToStreetAddress">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="mailingAddressData" nillable="true" type="tns:AddressData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="ConvertMailingAddressToStreetAddressResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="ConvertMailingAddressToStreetAddressResult" nillable="true" type="tns:StreetAddressData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="DeleteSubscription">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="subscriptionID" type="xsd:int" />
            <xsd:element minOccurs="0" name="bypassValidation" type="xsd:boolean" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="DeleteSubscriptionResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="DeleteSubscriptionResult" nillable="true" type="tns:OperationStatusData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetAddSubscriptionReasonCodes">
        <xsd:complexType>
          <xsd:sequence />
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetAddSubscriptionReasonCodesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element xmlns:q2="http://schemas.microsoft.com/2003/10/Serialization/Arrays" minOccurs="0" name="GetAddSubscriptionReasonCodesResult" nillable="true" type="q2:ArrayOfKeyValueOfintstring" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetAllActiveSubscriptions">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetAllActiveSubscriptionsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetAllActiveSubscriptionsResult" nillable="true" type="tns:ArrayOfSubscriptionData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="ArrayOfSubscriptionData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubscriptionData" nillable="true" type="tns:SubscriptionData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfSubscriptionData" nillable="true" type="tns:ArrayOfSubscriptionData" />
      <xsd:element name="GetAllSubscriptions">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetAllSubscriptionsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetAllSubscriptionsResult" nillable="true" type="tns:ArrayOfSubscriptionData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetClassesOfService">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
            <xsd:element minOccurs="0" name="address" nillable="true" type="tns:AddressData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetClassesOfServiceResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetClassesOfServiceResult" nillable="true" type="tns:ArrayOfClassOfServiceData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="ArrayOfClassOfServiceData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ClassOfServiceData" nillable="true" type="tns:ClassOfServiceData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfClassOfServiceData" nillable="true" type="tns:ArrayOfClassOfServiceData" />
      <xsd:element name="GetLinkSubDetail">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="subscriptionID" type="xsd:int" />
            <xsd:element minOccurs="0" name="maxRows" type="xsd:int" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetLinkSubDetailResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetLinkSubDetailResult" nillable="true" type="tns:ArrayOfSubscriptionData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscription">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="subscriptionID" type="xsd:int" />
            <xsd:element minOccurs="0" name="includeFeatures" type="xsd:boolean" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionResult" nillable="true" type="tns:SubscriptionData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionChargeSummary">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionChargeSummaryResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionChargeSummaryResult" nillable="true" type="tns:SubscriptionChargeSummaryData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="SubscriptionChargeSummaryData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription charge summary data
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="OneTimeChargeAmount" type="xsd:decimal">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates amount of one-time charge.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RecurringChargeAmount" type="xsd:decimal">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates amount of recurring charge.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="TotalChargeAmount" type="xsd:decimal">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates total charge amount.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionChargeSummaryData" nillable="true" type="tns:SubscriptionChargeSummaryData" />
      <xsd:element name="GetSubscriptionForPhoneNumber">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="phoneNumber" nillable="true" type="xsd:string" />
            <xsd:element minOccurs="0" name="userID" type="xsd:int" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionForPhoneNumberResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionForPhoneNumberResult" nillable="true" type="tns:SubscriptionData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionStatusCounts">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionStatusCountsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionStatusCountsResult" nillable="true" type="tns:ArrayOfSubscriptionStatusCountData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="ArrayOfSubscriptionStatusCountData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubscriptionStatusCountData" nillable="true" type="tns:SubscriptionStatusCountData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfSubscriptionStatusCountData" nillable="true" type="tns:ArrayOfSubscriptionStatusCountData" />
      <xsd:complexType name="SubscriptionStatusCountData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription status count data
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Count" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates result count.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of status option.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsActiveStatus" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicate active status.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="OptionID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of status option.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionStatusCountData" nillable="true" type="tns:SubscriptionStatusCountData" />
      <xsd:element name="GetSubscriptionSummaryConfig">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="billingPointID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionSummaryConfigResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionSummaryConfigResult" nillable="true" type="tns:SubscriptionSummaryConfigData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="SubscriptionSummaryConfigData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains data required to load the subscription summary page
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="IsExtendedDataDefaulted" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flat to set whether extended data is returned by default.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsHierarchyModeDefaulted" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to set whether heirarchy mode is set by default.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscriptionCount" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates result count.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionSummaryConfigData" nillable="true" type="tns:SubscriptionSummaryConfigData" />
      <xsd:element name="GetSubscriptionSummaryRecords">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="searchCriteriaData" nillable="true" type="tns:SubscriptionSummarySearchCriteriaData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="SubscriptionSummarySearchCriteriaData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription summary search criteria data
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="BillingPointID" type="xsd:long">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of Billing Point.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FilterTypes" nillable="true" type="tns:ArrayOfSubscriptionSummaryFilterData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 List of SubscriptionSummaryFilterData objects.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IncludeExtendedData" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to include extended summary data.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsSortAscending" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to sort in ascending order.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RowEnd" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates end point of returned data.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RowStart" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates start point of returned data.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SortBy" type="tns:SubscriptionSummaryDataType">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates method by which to sort 
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionSummarySearchCriteriaData" nillable="true" type="tns:SubscriptionSummarySearchCriteriaData" />
      <xsd:complexType name="ArrayOfSubscriptionSummaryFilterData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubscriptionSummaryFilterData" nillable="true" type="tns:SubscriptionSummaryFilterData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfSubscriptionSummaryFilterData" nillable="true" type="tns:ArrayOfSubscriptionSummaryFilterData" />
      <xsd:complexType name="SubscriptionSummaryFilterData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription summary filter data
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="FilterDataType" type="tns:SubscriptionSummaryDataType">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates method by which to filter results.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Value" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Value to filter results by.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionSummaryFilterData" nillable="true" type="tns:SubscriptionSummaryFilterData" />
      <xsd:simpleType name="SubscriptionSummaryDataType">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains data elements that can be used for filtering or sorting subscription summary
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="ID">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription ID.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Name">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription name.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Status">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription status.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="EffectiveDate">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription effective date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Plan">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription Plan type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="StopDate">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription stop date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="KeyFeatures">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription key features.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="InternalName">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription internal name.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Facility">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription Facility type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Service">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription Service type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Account">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription Account type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="LastActivity">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Filter by Subscription last activity date.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="SubscriptionSummaryDataType" nillable="true" type="tns:SubscriptionSummaryDataType" />
      <xsd:element name="GetSubscriptionSummaryRecordsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionSummaryRecordsResult" nillable="true" type="tns:SubscriptionSummarySearchData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="SubscriptionSummarySearchData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription summary search results
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Subscriptions" nillable="true" type="tns:ArrayOfSubscriptionSummaryData">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 List containing Subscription Summary results.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="TotalRecordCount" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates count of results in Subscriptions property.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionSummarySearchData" nillable="true" type="tns:SubscriptionSummarySearchData" />
      <xsd:complexType name="ArrayOfSubscriptionSummaryData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubscriptionSummaryData" nillable="true" type="tns:SubscriptionSummaryData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfSubscriptionSummaryData" nillable="true" type="tns:ArrayOfSubscriptionSummaryData" />
      <xsd:complexType name="SubscriptionSummaryData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Contains subscription summary data
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="AccountTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of Account Type.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CIDName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Vanity name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="CompanyName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription company name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DirectoryType" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Selected directory type
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="DirectoryTypeID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Selected directory type id
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FacilityTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of Facility Type.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="FirstName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription first name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="InternalName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription internal name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsAddressUpdatePending" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicated if Address Update is pending for Subscription.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsCIDAvailable" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicated if Caller ID is available for service
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsDirectoryEnabled" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicate if Directory support is enabled.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStatusActive" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicate if current status is active.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStatusNew" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicate if current status is new.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="IsStatusTemporary" type="xsd:boolean">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Flag to indicate if current status is temporary.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="KeyFeatures" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 String containing Key Features data.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LastActivity" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of last Subscription activity.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="LastName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription last name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Name" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription name.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="OpenOrderTypes" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Comma delimited list of open order types for Subscription.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PICs" nillable="true" type="tns:ArrayOfSubscriberPICData" />
          <xsd:element minOccurs="0" name="PhoneNumber" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Subscription phone number.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of Plan for Subscription.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanName" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Name of Plan.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanStartDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Start date of Plan.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="PlanStopDate" nillable="true" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Stop date of Plan.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ProductCategory" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Product Category Code.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="RecordType" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Indicates Subscription record type.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="ServiceTypeDesc" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of Service Type.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StatusDescription" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Description of current status.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StatusEffectiveDate" type="xsd:dateTime">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 Effective date of current status.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="StatusID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of current status.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscribedPlanID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of SubscribedPlan.
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="SubscriptionID" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 ID of Subscription
 &lt;/summary&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriptionSummaryData" nillable="true" type="tns:SubscriptionSummaryData" />
      <xsd:complexType name="ArrayOfSubscriberPICData">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubscriberPICData" nillable="true" type="tns:SubscriberPICData" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfSubscriberPICData" nillable="true" type="tns:ArrayOfSubscriberPICData" />
      <xsd:complexType name="SubscriberPICData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing the criteria needed to retrieve available plans.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Carrier" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="CreatedBy" nillable="true" type="xsd:string" />
          <xsd:element minOccurs="0" name="CreatedDate" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="Freeze" type="xsd:boolean" />
          <xsd:element minOccurs="0" name="PICType" type="tns:PICTypeData" />
          <xsd:element minOccurs="0" name="Reason" nillable="true" type="tns:ReasonCodeData" />
          <xsd:element minOccurs="0" name="StartDate" type="xsd:dateTime" />
          <xsd:element minOccurs="0" name="StopDate" nillable="true" type="xsd:dateTime" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="SubscriberPICData" nillable="true" type="tns:SubscriberPICData" />
      <xsd:simpleType name="PICTypeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Determines if the PIC type is Unknown, Interstate or Intrastate.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
          <xsd:enumeration value="Unknown">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Unknown PIC type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Interstate">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Interstate PIC type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
          <xsd:enumeration value="Intrastate">
            <xsd:annotation>
              <xsd:documentation>	&lt;summary&gt;
 Intrastate PIC type.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:enumeration>
        </xsd:restriction>
      </xsd:simpleType>
      <xsd:element name="PICTypeData" nillable="true" type="tns:PICTypeData" />
      <xsd:complexType name="ReasonCodeData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing reason code data.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="Code" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 This is the integer code for the reason.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Status" type="xsd:int">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 This is the integer value for the reason status.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Value" nillable="true" type="xsd:string">
            <xsd:annotation>
              <xsd:appinfo />
              <xsd:documentation>	&lt;summary&gt;
 This is the string value for the reason code.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ReasonCodeData" nillable="true" type="tns:ReasonCodeData" />
      <xsd:element name="GetSubscriptionSummaryRecordsAsCsv">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="searchCriteriaData" nillable="true" type="tns:SubscriptionSummarySearchCriteriaData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="GetSubscriptionSummaryRecordsAsCsvResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="GetSubscriptionSummaryRecordsAsCsvResult" nillable="true" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="IsSubscriptionAccessAllowed">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="subscriptionID" type="xsd:int" />
            <xsd:element minOccurs="0" name="userID" type="xsd:long" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="IsSubscriptionAccessAllowedResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="IsSubscriptionAccessAllowedResult" type="xsd:boolean" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="NameChangeSubmit">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="nameChangeSO" nillable="true" type="tns:NameChangeServiceOrderData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:complexType name="NameChangeServiceOrderData">
        <xsd:annotation>
          <xsd:appinfo />
          <xsd:documentation>	&lt;summary&gt;
 Object representing data required to create a NameChange change service order 
 for a subscription.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns:SubmitServiceOrderData">
            <xsd:sequence>
              <xsd:element minOccurs="0" name="InheritNameFromBillingPoint" type="xsd:boolean">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 Determines if the subscription should inherit name information from the billing point if allowed.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="NewName" nillable="true" type="tns:NameData">
                <xsd:annotation>
                  <xsd:appinfo />
                  <xsd:documentation>	&lt;summary&gt;
 The new Company Name or First/Last Name values.  Not required if inheriting name values from the billing point.
 &lt;/summary&gt;
	&lt;value&gt;&lt;/value&gt;
	&lt;returns&gt;&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:element name="NameChangeServiceOrderData" nillable="true" type="tns:NameChangeServiceOrderData" />
      <xsd:element name="NameChangeSubmitResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="NameChangeSubmitResult" nillable="true" type="tns:SubmitServiceOrderStatusData" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:schema>
    <xs:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="anyType" nillable="true" type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true" type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true" type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true" type="xs:dateTime" />
      <xs:element name="decimal" nillable="true" type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true" type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true" type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true" type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true" type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true" type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xsd:schema xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays" elementFormDefault="qualified" targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
      <xsd:complexType name="ArrayOfint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="int" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfint" nillable="true" type="tns:ArrayOfint" />
      <xsd:complexType name="ArrayOfKeyValueOfintstring">
        <xsd:annotation>
          <xsd:appinfo>
            <IsDictionary xmlns="http://schemas.microsoft.com/2003/10/Serialization/">true</IsDictionary>
          </xsd:appinfo>
        </xsd:annotation>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="KeyValueOfintstring">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Key" type="xsd:int" />
                <xsd:element name="Value" nillable="true" type="xsd:string" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:complexType>
      <xsd:element name="ArrayOfKeyValueOfintstring" nillable="true" type="tns:ArrayOfKeyValueOfintstring" />
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionAndBillingPointForPhoneNumber" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionAndBillingPointForPhoneNumberResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_AddSubscriptionSubmit_InputMessage">
    <wsdl:part name="parameters" element="tns:AddSubscriptionSubmit" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_AddSubscriptionSubmit_OutputMessage">
    <wsdl:part name="parameters" element="tns:AddSubscriptionSubmitResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_ConvertMailingAddressToStreetAddress_InputMessage">
    <wsdl:part name="parameters" element="tns:ConvertMailingAddressToStreetAddress" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_ConvertMailingAddressToStreetAddress_OutputMessage">
    <wsdl:part name="parameters" element="tns:ConvertMailingAddressToStreetAddressResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_DeleteSubscription_InputMessage">
    <wsdl:part name="parameters" element="tns:DeleteSubscription" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_DeleteSubscription_OutputMessage">
    <wsdl:part name="parameters" element="tns:DeleteSubscriptionResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAddSubscriptionReasonCodes_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAddSubscriptionReasonCodes" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAddSubscriptionReasonCodes_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAddSubscriptionReasonCodesResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAllActiveSubscriptions_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAllActiveSubscriptions" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAllActiveSubscriptions_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAllActiveSubscriptionsResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAllSubscriptions_InputMessage">
    <wsdl:part name="parameters" element="tns:GetAllSubscriptions" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetAllSubscriptions_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetAllSubscriptionsResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetClassesOfService_InputMessage">
    <wsdl:part name="parameters" element="tns:GetClassesOfService" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetClassesOfService_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetClassesOfServiceResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetLinkSubDetail_InputMessage">
    <wsdl:part name="parameters" element="tns:GetLinkSubDetail" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetLinkSubDetail_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetLinkSubDetailResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscription_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscription" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscription_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionChargeSummary_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionChargeSummary" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionChargeSummary_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionChargeSummaryResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionForPhoneNumber_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionForPhoneNumber" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionForPhoneNumber_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionForPhoneNumberResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionStatusCounts_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionStatusCounts" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionStatusCounts_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionStatusCountsResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryConfig_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryConfig" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryConfig_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryConfigResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryRecords_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryRecords" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryRecords_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryRecordsResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryRecordsAsCsv_InputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryRecordsAsCsv" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_GetSubscriptionSummaryRecordsAsCsv_OutputMessage">
    <wsdl:part name="parameters" element="tns:GetSubscriptionSummaryRecordsAsCsvResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_IsSubscriptionAccessAllowed_InputMessage">
    <wsdl:part name="parameters" element="tns:IsSubscriptionAccessAllowed" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_IsSubscriptionAccessAllowed_OutputMessage">
    <wsdl:part name="parameters" element="tns:IsSubscriptionAccessAllowedResponse" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_NameChangeSubmit_InputMessage">
    <wsdl:part name="parameters" element="tns:NameChangeSubmit" />
  </wsdl:message>
  <wsdl:message name="ISubscriptionService_NameChangeSubmit_OutputMessage">
    <wsdl:part name="parameters" element="tns:NameChangeSubmitResponse" />
  </wsdl:message>
  <wsdl:portType name="ISubscriptionService">
    <wsdl:documentation>	&lt;summary&gt;
 Process subscription data requests.
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
    <wsdl:operation name="GetSubscriptionAndBillingPointForPhoneNumber">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve subscription data for the provided phone number.  If more that one subscription record is found matching the phone number
 the subscription that is currently active will be returned.  Associated Billing Point profile data is returned as well. 
 &lt;/summary&gt;
	&lt;param name="phoneNumber"&gt;The phone number or alternate ID to use for finding subscription data.&lt;/param&gt;
	&lt;param name="userID"&gt;The user ID to use for search for subscription data based on a phone number.&lt;/param&gt;
	&lt;returns&gt;Subscription data matching the phone number.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionServiceRest/GetSubscriptionAndBillingPointForPhoneNumber" message="tns:ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionServiceRest/GetSubscriptionAndBillingPointForPhoneNumberResponse" message="tns:ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="AddSubscriptionSubmit">
      <wsdl:documentation>	&lt;summary&gt;
 Submit an add subscription service order for a billing point.
 &lt;example&gt;&lt;code&gt;

Dim billingPointId As Long = 353
Dim userId As Integer = 999
Dim userName As String = "exampleuser"
Dim bpProfileData As BillingPointProfileData
Dim serviceAddress As StreetAddressData
Dim serviceName As NameData
Dim listClassesOfService As List(Of ClassOfServiceData)
Dim listPlans As List(Of PlanData)
Dim listAvailableFeatures As List(Of AvailableFeatureData)
Dim listNpaNxxs As List(Of NpaNxxData)
Dim listContractTypes As List(Of ContractTypeData)
Dim listAgents As List(Of AgentData)
Dim listHardwareTypes As List(Of HardwareModelData)
Dim billingTaxExemptionDefaults As List(Of TaxExemptionData)
Dim subscribedFeatures As List(Of EditableSubscribedFeatureData)
Dim directoryOptions As List(Of DirectoryTypeData)
Dim lifelineExemptOptions As Dictionary(Of Integer, String)
Dim marketOptions As Dictionary(Of Integer, String)
Dim taxExemptionOptions As Dictionary(Of Integer, String)
Dim reasonCodeOptions As Dictionary(Of Integer, String)

' get address from the billing point for initializing the subscription
Using client = ClientBuilder.BuildClient(Of BillingPointClient)()
    bpProfileData = client.GetBillingPointProfile(billingPointId)
End Using

If (bpProfileData.MailingAddress IsNot Nothing) Then

    Using client = ClientBuilder.BuildClient(Of SubscriptionClient)()
        ' get the compatible classes of service based upon the billing information
        listClassesOfService = client.GetClassesOfService(billingPointId, bpProfileData.MailingAddress)
        ' extract the discrete address elements needed for a service address
        serviceAddress = client.ConvertMailingAddressToStreetAddress(bpProfileData.MailingAddress)
        serviceName = bpProfileData.Name
        reasonCodeOptions = client.GetAddSubscriptionReasonCodes()
    End Using

    Using client = ClientBuilder.BuildClient(Of ContractClient)()
        listContractTypes = client.GetContractTypes()
        listAgents = client.GetAgents(userId)
    End Using

    Using client = ClientBuilder.BuildClient(Of HardwareClient)()
        listHardwareTypes = client.GetHardwareModels()
    End Using

    Using client = ClientBuilder.BuildClient(Of DirectoryClient)()
        directoryOptions = client.GetAvailableDirectoryTypes()
    End Using

    Using client = ClientBuilder.BuildClient(Of ControlDataClient)()
        lifelineExemptOptions = client.GetAvailableLifelineExempt()
        taxExemptionOptions = client.GetAvailableTaxExemptions()
    End Using

    Using client = ClientBuilder.BuildClient(Of BillingPointClient)()
        marketOptions = client.GetAvailableMarkets(billingPointId, userId)
        billingTaxExemptionDefaults = client.GetTaxExemptions(billingPointId)
    End Using

    ' Select a class of service and lifeline exempt settings
    Dim selectedClassOfService As ClassOfServiceData = listClassesOfService(0)
    Dim selectedLifelineExempt As Integer = lifelineExemptOptions.Keys(0)

    ' Prepare data for getting plans that are compatible with the above selections
    Dim planSelectionData As New PlanSelectionData() With {
        .ClassOfService = selectedClassOfService,
        .StreetAddress = serviceAddress,
        .LifelineExempt = selectedLifelineExempt
    }

    ' Prepare data for getting plans that are compatible with the above selections
    Dim featureSelectionData As New FeatureSelectionData() With {
        .ClassOfService = selectedClassOfService,
        .StreetAddress = serviceAddress,
        .LifelineExempt = selectedLifelineExempt
    }

    ' Prepare data for getting plans that are compatible with the above selections
    Dim npaNxxSelectionData As New NpaNxxSelectionData() With {
        .ClassOfService = selectedClassOfService,
        .StreetAddress = serviceAddress,
        .LifelineExempt = selectedLifelineExempt
    }

    ' Get list of compatible plans and areas to choose from
    Using client = ClientBuilder.BuildClient(Of PlanClient)()
        listPlans = client.GetAvailablePlans(billingPointId, planSelectionData)
        listNpaNxxs = client.GetAvailableNpaNxxValues(billingPointId, npaNxxSelectionData)
    End Using

    ' Select a plan
    Dim selectedPlanID As Integer = listPlans(0).PlanID

    ' Select an NPA/NXX(s)
    Dim selectedNpaNxx As New List(Of NpaNxxData)
    selectedNpaNxx.Add(listNpaNxxs(0))
    Dim availableNumbers As List(Of AvailableNumberData)

    ' Get list of available numbers within the selected area
    Using client = ClientBuilder.BuildClient(Of PlanClient)()
        availableNumbers = client.GetSuggestedPhoneNumbers(selectedNpaNxx, billingPointId, npaNxxSelectionData)
    End Using

    ' Select plan features
    Using client = ClientBuilder.BuildClient(Of FeatureClient)()
        listAvailableFeatures = client.GetAvailableFeatures(billingPointId, selectedPlanID, featureSelectionData)
        ' Select just the mandatory plan features for this example
        Dim selectedFeatureIDs As List(Of Integer) = (From feature In listAvailableFeatures
                                                      Where feature.IsRequired
                                                      Select feature.PlanFeatureID).ToList()

        ' Build subscribed feature data for the selected plan features
        subscribedFeatures = client.GetSubscribedFeaturesByFeatureIDs(billingPointId, selectedFeatureIDs, featureSelectionData)

    End Using

    Dim subscribedFeature As SubscribedFeatureData = subscribedFeatures(0).SubscribedFeature

    ' If the feature has service ID options
    If (subscribedFeature.ServiceIDs.Count &amp;gt; 0) Then
        Dim serviceID As ServiceIDData = subscribedFeature.ServiceIDs(0)
        ' Get the service ID options (if allowed by the ID type) and assign the first ID value and hold ID to the service ID
        Dim doGetServiceIDOptions As Boolean = (serviceID.IDType.InventoryClass = ServiceIDInventoryClassData.Inventoried AndAlso
                                                serviceID.IDType.IsAutoAssigned)
        If (doGetServiceIDOptions) Then
            Using client = ClientBuilder.BuildClient(Of SubscriptionIDClient)()
                Dim serviceIDOptions As List(Of AvailableServiceIDData) = client.GetAvailableServiceIDs(serviceID.IDType.ID, Nothing)
                serviceID.IDValue = serviceIDOptions(0).IDValue
                serviceID.HoldID = serviceIDOptions(0).HoldID
            End Using
        Else
            ' manually set the ID value since auto-assign is not enabled
            serviceID.IDValue = "test service ID value"
        End If
    End If

    ' Make additional service selections
    Dim selectedNumberObject As AvailableNumberData = availableNumbers(0)
    Dim selectedNumber As String = selectedNumberObject.npanxx.Npa &amp;amp; selectedNumberObject.npanxx.Nxx &amp;amp;
                                   selectedNumberObject.LineNumber
    Dim selectedHardwareModelId As Integer = listHardwareTypes(0).ModelID
    Dim selectedMarket As Integer = marketOptions.Keys(0)
    Dim selectedICCID As String = Nothing
    Dim selectedTaxExemptions As New List(Of Integer)
    Dim selectedReasonCode As Integer = reasonCodeOptions.Keys(0)

    ' directory type is always required for an add plan
    Dim selectedDirectoryOption As DirectoryTypeData = directoryOptions(0)
    Dim selectedDirectoryTypeID As Integer = selectedDirectoryOption.DirectoryTypeID
    Dim callerIDName As String = Nothing
    If (selectedDirectoryOption.IsCallerIDNameRequired) Then
        callerIDName = "CID Test"
    End If

    ' only perform wireless ID logic for wireless classes of service
    If (selectedClassOfService.ProductCategory = ProductCategoryTypeData.Wireless) Then
        If (selectedClassOfService.HardwareType = WirelessHardwareTypeData.GSM) Then
            selectedICCID = "01234567890123456789"
        Else
            ' Populate other wireless ID formats as needed.
        End If
    End If

    ' If a contract can be specified for the class of service, populate a ContractData object
    Dim newContract As ContractData = Nothing
    If (selectedClassOfService.EnableContracts &amp;lt;&amp;gt; ContractAvailabilityTypeData.NotAvailable) Then
        newContract = New ContractData
        With newContract
            .Type = listContractTypes(0)
            .StartDate = Date.Today
            .StopDate = Date.Today.AddYears(2)
            .Agent = listAgents(0)
            .Notes = "Contract notes"
        End With
    End If

    ' Select the billing point's default set of tax exemptions
    For Each exemption In billingTaxExemptionDefaults
        selectedTaxExemptions.Add(exemption.ID)
    Next

    ' Create and populate the Add Subscription service order data object
    Dim addSubSO As New AddSubscriptionServiceOrderData
    With addSubSO
        .UserID = userId
        .UserName = userName
        .BillingPointID = billingPointId
        .ClassOfService = selectedClassOfService
        .PlanID = selectedPlanID
        .ScheduledStartDate = Date.Today
        .DueDate = Date.Today.AddDays(7)
        .Directory.DirectoryTypeID = selectedDirectoryTypeID
        .Directory.CallerIDName = callerIDName
        .ServiceAddress = serviceAddress
        .ServiceName = serviceName
        .HardwareModelID = selectedHardwareModelId
        .Contract = newContract
        .Market = selectedMarket
        .LifelineExempt = selectedLifelineExempt
        .ID = selectedNumber
        .ICCID = selectedICCID ' or ESN, IMEI, MEID values as needed
        .TaxExemptions = selectedTaxExemptions
        .BypassReuseWaitPeriod = False
        .ReasonCode = selectedReasonCode
    End With

    ' add the selected features to the service order
    For Each subFeat As EditableSubscribedFeatureData In subscribedFeatures
        Dim featChange As New FeatureChangeData
        With featChange
            .StartDateType = ChargeStartDateTypeData.DateValue
            .StopDateType = ChargeStopDateTypeData.DateValue
            .SubscribedFeature = subFeat.SubscribedFeature
        End With
        addSubSO.Features.Add(featChange)
    Next

    Dim orderStatus As AddSubscriptionServiceOrderStatusData = Nothing
    Dim newServiceOrderID As Long = 0
    Dim errorMessages As New List(Of String)
    Dim submitEx As Exception = Nothing

    Using client = ClientBuilder.BuildClient(Of SubscriptionClient)()

        Try
            orderStatus = client.AddSubscriptionSubmit(addSubSO)
        Catch ex As Exception
            submitEx = ex
        End Try

        ' handle the results
        Select Case orderStatus.StatusCode
            Case OperationStatusCode.Success
                ' if the service order was successfully created get the new so ID
                newServiceOrderID = orderStatus.ServiceOrderID
            Case OperationStatusCode.ValidationFailure
                ' validation error occurred so collect error messages
                orderStatus.Messages.ToList().ForEach(Sub(x) errorMessages.Add(x.Description))
                ' update service ID hold IDs if service ID reservation data is returned
                If (orderStatus.ServiceIDReservations.Count &amp;gt; 0) Then
                    For Each reservation In orderStatus.ServiceIDReservations
                        Dim matchingServiceID As ServiceIDData = (From feature In addSubSO.Features
                                                                  From serviceID In feature.SubscribedFeature.ServiceIDs
                                                                  Where serviceID.IDType.ID = reservation.TypeID AndAlso
                                                                  serviceID.IDValue = reservation.IDValue
                                                                  Select serviceID).FirstOrDefault()
                        If (matchingServiceID IsNot Nothing) Then
                            matchingServiceID.HoldID = reservation.HoldID
                        End If
                    Next
                End If
            Case Else
                ' an exception occurred so collect error messages and create an exception
                orderStatus.Messages.ToList().ForEach(Sub(x) errorMessages.Add(x.Description))
                Throw New ApplicationException(String.Join(ControlChars.NewLine, errorMessages.ToArray()), submitEx)
        End Select

    End Using

End If

&lt;/code&gt;&lt;/example&gt;&lt;/summary&gt;
	&lt;param name="subData"&gt;The add subscription service order data to submit.&lt;/param&gt;
	&lt;returns&gt;An object indicating if the add subscription service order was successfully created, validation errors were detected, or 
 an exception occurred while processing the service order request.  If successful the service order ID property will be populated 
 with the new unique order ID.&lt;/returns&gt;
	&lt;remarks&gt;This method adds both a new subscription and a subscribed plan for that subscription.&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/AddSubscriptionSubmit" message="tns:ISubscriptionService_AddSubscriptionSubmit_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/AddSubscriptionSubmitResponse" message="tns:ISubscriptionService_AddSubscriptionSubmit_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="ConvertMailingAddressToStreetAddress">
      <wsdl:documentation>	&lt;summary&gt;
 Translates a billing point mailing address to a subscription point street address.
 &lt;/summary&gt;
	&lt;param name="mailingAddressData"&gt;The billing point mailing address to convert to street address.&lt;/param&gt;
	&lt;returns&gt;A street address object populated from the billing point mailing address.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/ConvertMailingAddressToStreetAddress" message="tns:ISubscriptionService_ConvertMailingAddressToStreetAddress_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/ConvertMailingAddressToStreetAddressResponse" message="tns:ISubscriptionService_ConvertMailingAddressToStreetAddress_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DeleteSubscription">
      <wsdl:documentation>	&lt;summary&gt;
 Delete a subscription by ID.
 &lt;/summary&gt;
	&lt;param name="subscriptionID"&gt;ID of subscription to delete.&lt;/param&gt;
	&lt;param name="bypassValidation"&gt;Indicates if validation should be performed prior to deleting the subscription.&lt;/param&gt;
	&lt;returns&gt;An object containing the success or failure of the operation along with any error or warning messages.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/DeleteSubscription" message="tns:ISubscriptionService_DeleteSubscription_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/DeleteSubscriptionResponse" message="tns:ISubscriptionService_DeleteSubscription_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAddSubscriptionReasonCodes">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve the possible reason codes associated when adding a subscription.
 &lt;/summary&gt;
	&lt;returns&gt;A dictionary of reason codes.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAddSubscriptionReasonCodes" message="tns:ISubscriptionService_GetAddSubscriptionReasonCodes_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAddSubscriptionReasonCodesResponse" message="tns:ISubscriptionService_GetAddSubscriptionReasonCodes_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllActiveSubscriptions">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve data for all active subscriptions under a given billing point.  Results are sorted by subscription phone number or alternate ID.
 &lt;example&gt;&lt;code&gt;

Dim billingPointID As Long = 23423
Dim subs As List(Of SubscriptionData) = Nothing

Using client = ClientBuilder.BuildClient(Of SubscriptionClient)()
    subs = client.GetAllActiveSubscriptions(billingPointID)
End Using

&lt;/code&gt;&lt;/example&gt;&lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing point ID to fetch active subscription records.&lt;/param&gt;
	&lt;returns&gt;An array of subscription data objects.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllActiveSubscriptions" message="tns:ISubscriptionService_GetAllActiveSubscriptions_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllActiveSubscriptionsResponse" message="tns:ISubscriptionService_GetAllActiveSubscriptions_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllSubscriptions">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve data for all subscriptions under a given billing point.  Results are sorted by subscription phone number or alternate ID.
 &lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing point ID to fetch subscription records.&lt;/param&gt;
	&lt;returns&gt;An array of subscription data objects.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllSubscriptions" message="tns:ISubscriptionService_GetAllSubscriptions_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllSubscriptionsResponse" message="tns:ISubscriptionService_GetAllSubscriptions_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetClassesOfService">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieves the available class of service records for the given billing point ID and address.
 &lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing point ID to find class of service records.&lt;/param&gt;
	&lt;param name="address"&gt;The address to find class of service records.&lt;/param&gt;
	&lt;returns&gt;An array of class of services records.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetClassesOfService" message="tns:ISubscriptionService_GetClassesOfService_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetClassesOfServiceResponse" message="tns:ISubscriptionService_GetClassesOfService_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetLinkSubDetail">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve any linked Subscriptions to given subscription ID.
 &lt;/summary&gt;
	&lt;param name="subscriptionID"&gt;The subscription ID to find linked subscriptions.&lt;/param&gt;
	&lt;param name="maxRows"&gt;Specify a max number of records to return.&lt;/param&gt;
	&lt;returns&gt;A list of subscription records.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetLinkSubDetail" message="tns:ISubscriptionService_GetLinkSubDetail_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetLinkSubDetailResponse" message="tns:ISubscriptionService_GetLinkSubDetail_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscription">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve subscription data based on the provided ID.
 &lt;example&gt;&lt;code&gt;

Dim subscriptionID As Integer = 97
Dim subData As SubscriptionData = Nothing

Using client = ClientBuilder.BuildClient(Of SubscriptionClient)()
    subData = client.GetSubscription(subscriptionID, False)
End Using

&lt;/code&gt;&lt;/example&gt;&lt;/summary&gt;
	&lt;param name="subscriptionID"&gt;The subscription ID used to find the subscription data.&lt;/param&gt;
	&lt;param name="includeFeatures"&gt;Indicates if features should also be returned when fetching the subscription data.&lt;/param&gt;
	&lt;returns&gt;Subscription data matching the ID.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscription" message="tns:ISubscriptionService_GetSubscription_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionResponse" message="tns:ISubscriptionService_GetSubscription_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionChargeSummary">
      <wsdl:documentation>	&lt;summary&gt;
 Get the one time, recurring, and total charges for all billing point subscriptions.
 &lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing ID to fetch subscription charge summary counts.&lt;/param&gt;
	&lt;returns&gt;An object containing one-time, recurring, and total charges for all billing point subscriptions.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionChargeSummary" message="tns:ISubscriptionService_GetSubscriptionChargeSummary_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionChargeSummaryResponse" message="tns:ISubscriptionService_GetSubscriptionChargeSummary_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionForPhoneNumber">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve subscription data for the provided phone number.  If more that one subscription record is found matching the phone number
 the subscription that is currently active will be returned.
 &lt;/summary&gt;
	&lt;param name="phoneNumber"&gt;The phone number or alternate ID to use for finding subscription data.&lt;/param&gt;
	&lt;param name="userID"&gt;The user ID to use for search for subscription data based on a phone number.&lt;/param&gt;
	&lt;returns&gt;Subscription data matching the phone number.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionForPhoneNumber" message="tns:ISubscriptionService_GetSubscriptionForPhoneNumber_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionForPhoneNumberResponse" message="tns:ISubscriptionService_GetSubscriptionForPhoneNumber_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionStatusCounts">
      <wsdl:documentation>	&lt;summary&gt;
 Get the status counts for all billing point subscriptions.
 &lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing ID to fetch status counts.&lt;/param&gt;
	&lt;returns&gt;A collection of SubscriptionStatusCountData objects.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionStatusCounts" message="tns:ISubscriptionService_GetSubscriptionStatusCounts_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionStatusCountsResponse" message="tns:ISubscriptionService_GetSubscriptionStatusCounts_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryConfig">
      <wsdl:documentation>	&lt;summary&gt;
 Return data required to setup and render the subscription summary page
 &lt;/summary&gt;
	&lt;param name="billingPointID"&gt;The billing ID to fetch a subscription count.&lt;/param&gt;
	&lt;returns&gt;An object containing a subscription count and if extended data should be shown by default.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryConfig" message="tns:ISubscriptionService_GetSubscriptionSummaryConfig_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryConfigResponse" message="tns:ISubscriptionService_GetSubscriptionSummaryConfig_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryRecords">
      <wsdl:documentation>	&lt;summary&gt;
 Get subscription summary based on search criteria.
 &lt;/summary&gt;
	&lt;param name="searchCriteriaData"&gt;The criteria data to fetch subscription summary data.&lt;/param&gt;
	&lt;returns&gt;An object containing the total count of subscription records found and a list of subscription summary records based on 
 row start and end values.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecords" message="tns:ISubscriptionService_GetSubscriptionSummaryRecords_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecordsResponse" message="tns:ISubscriptionService_GetSubscriptionSummaryRecords_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryRecordsAsCsv">
      <wsdl:documentation>	&lt;summary&gt;
 Get subscription summary based on search criteria, returned in CSV format.
 &lt;/summary&gt;
	&lt;param name="searchCriteriaData"&gt;The criteria data to fetch subscription summary data.&lt;/param&gt;
	&lt;returns&gt;A CSV string representing subscription summary records which match the provided search criteria data.&lt;/returns&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecordsAsCsv" message="tns:ISubscriptionService_GetSubscriptionSummaryRecordsAsCsv_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecordsAsCsvResponse" message="tns:ISubscriptionService_GetSubscriptionSummaryRecordsAsCsv_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="IsSubscriptionAccessAllowed">
      <wsdl:documentation>	&lt;summary&gt;
 Determines if the user has access to read data or make data changes to the subscription ID.
 &lt;/summary&gt;
	&lt;param name="subscriptionID"&gt;The subscription ID  to determine if the user has access.&lt;/param&gt;
	&lt;param name="userID"&gt;The user ID used to determine if access to the subscription is allowed.&lt;/param&gt;
	&lt;returns&gt;True if the user has access to the subscription or false if the user does not have access to the subscription.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/IsSubscriptionAccessAllowed" message="tns:ISubscriptionService_IsSubscriptionAccessAllowed_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/IsSubscriptionAccessAllowedResponse" message="tns:ISubscriptionService_IsSubscriptionAccessAllowed_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="NameChangeSubmit">
      <wsdl:documentation>	&lt;summary&gt;
 Submit a name change service order for a subscription.
 &lt;!--Unable to include XML fragment '//NameChangeSubmit/example' of file '..\Doco\APIExamples.xml'.--&gt;&lt;/summary&gt;
	&lt;param name="nameChangeSO"&gt;The name change service order data to submit.&lt;/param&gt;
	&lt;returns&gt;An object indicating if the name change service order was successfully created, validation errors were detected, or 
 an exception occurred while processing the service order request.  If successful the service order ID property will be populated 
 with the new unique order ID.&lt;/returns&gt;
	&lt;remarks&gt;Submitting a name change service order involves creating a NameChangeServiceOrderData object including the new Company Name or First Name Last Name. 
 All properties are required on the NameChangeServiceOrderData object except the InstallInstructions. A SubmitServiceOrderStatusData 
 object will be returned with a status code indicating if the service order creation was successful, had validation errors, or a 
 server-side error occurred while processing the transaction.  If the response data indicates an exception occurred recommendation 
 is to fetch all active service orders for the subscription to determine if the ServiceOrderActivityType.NameChange service order was created.&lt;/remarks&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/NameChangeSubmit" message="tns:ISubscriptionService_NameChangeSubmit_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/NameChangeSubmitResponse" message="tns:ISubscriptionService_NameChangeSubmit_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:portType name="ISubscriptionServiceRest">
    <wsdl:documentation>	&lt;summary&gt;
 Process subscription data requests (REST only)
 &lt;/summary&gt;
	&lt;remarks&gt;&lt;/remarks&gt;</wsdl:documentation>
    <wsdl:operation name="GetSubscriptionAndBillingPointForPhoneNumber">
      <wsdl:documentation>	&lt;summary&gt;
 Retrieve subscription data for the provided phone number.  If more that one subscription record is found matching the phone number
 the subscription that is currently active will be returned.  Associated Billing Point profile data is returned as well. 
 &lt;/summary&gt;
	&lt;param name="phoneNumber"&gt;The phone number or alternate ID to use for finding subscription data.&lt;/param&gt;
	&lt;param name="userID"&gt;The user ID to use for search for subscription data based on a phone number.&lt;/param&gt;
	&lt;returns&gt;Subscription data matching the phone number.&lt;/returns&gt;</wsdl:documentation>
      <wsdl:input wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionServiceRest/GetSubscriptionAndBillingPointForPhoneNumber" message="tns:ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_InputMessage" />
      <wsdl:output wsaw:Action="http://hickorytech.com/suitesolution/client/service/ISubscriptionServiceRest/GetSubscriptionAndBillingPointForPhoneNumberResponse" message="tns:ISubscriptionService_GetSubscriptionAndBillingPointForPhoneNumber_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_ISubscriptionService" type="tns:ISubscriptionService">
    <wsp:PolicyReference URI="#BasicHttpBinding_ISubscriptionService_policy" />
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="GetSubscriptionAndBillingPointForPhoneNumber">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionServiceRest/GetSubscriptionAndBillingPointForPhoneNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="AddSubscriptionSubmit">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/AddSubscriptionSubmit" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="ConvertMailingAddressToStreetAddress">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/ConvertMailingAddressToStreetAddress" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DeleteSubscription">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/DeleteSubscription" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAddSubscriptionReasonCodes">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAddSubscriptionReasonCodes" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllActiveSubscriptions">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllActiveSubscriptions" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllSubscriptions">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetAllSubscriptions" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetClassesOfService">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetClassesOfService" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetLinkSubDetail">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetLinkSubDetail" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscription">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscription" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionChargeSummary">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionChargeSummary" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionForPhoneNumber">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionForPhoneNumber" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionStatusCounts">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionStatusCounts" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryConfig">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryConfig" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryRecords">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecords" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetSubscriptionSummaryRecordsAsCsv">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/GetSubscriptionSummaryRecordsAsCsv" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="IsSubscriptionAccessAllowed">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/IsSubscriptionAccessAllowed" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="NameChangeSubmit">
      <soap:operation soapAction="http://hickorytech.com/suitesolution/client/service/ISubscriptionService/NameChangeSubmit" style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:binding name="WebHttpBinding_ISubscriptionServiceRest" type="tns:ISubscriptionServiceRest">
    <wsp:PolicyReference URI="#WebHttpBinding_ISubscriptionServiceRest_policy" />
    <wsdl:operation name="GetSubscriptionAndBillingPointForPhoneNumber">
      <wsdl:input />
      <wsdl:output />
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="SubscriptionService">
    <wsdl:port name="BasicHttpBinding_ISubscriptionService" binding="tns:BasicHttpBinding_ISubscriptionService">
      <soap:address location="https://col-uat-ss1:8018/SubscriptionService" />
    </wsdl:port>
    <wsdl:port name="WebHttpBinding_ISubscriptionServiceRest" binding="tns:WebHttpBinding_ISubscriptionServiceRest" />
  </wsdl:service>
</wsdl:definitions>